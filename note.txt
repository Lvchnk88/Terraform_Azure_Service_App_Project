# # Create Key Vault Secret
# data "azurerm_client_config" "current" {}

# # Set Vault
# resource "azurerm_key_vault" "vault" {
#   name                       = "sergii-vault"
#   location                   = var.resource_group_location
#   resource_group_name        = var.resource_group_name
#   tenant_id                  = data.azurerm_client_config.current.tenant_id
#   sku_name                   = "standard"
#   soft_delete_retention_days = 7

#   access_policy {
#     tenant_id = data.azurerm_client_config.current.tenant_id
#     object_id = data.azurerm_client_config.current.object_id

#     key_permissions = [
#       "Create",
#       "Delete",
#       "Get",
#       "List",
#       "Purge",
#       "Recover",
#       "Update",
#       "GetRotationPolicy",
#       "SetRotationPolicy"
#     ]

#     secret_permissions = [
#       "Set", 
#       "Get",
#       "List",
#       "Set",
#       "Delete",
#       "Recover",
#       "Backup",
#       "Restore"
#     ]
#   }
# }

# # Create a key.
# resource "azurerm_key_vault_key" "key" {
#   name         = "sergii-Key"
#   key_vault_id = azurerm_key_vault.vault.id
#   key_type     = "RSA"
#   key_size     = 4096

#   key_opts = [
#     "decrypt",
#     "encrypt",
#     "sign",
#     "verify",
#     "unwrapKey",
#     "wrapKey"
#   ]

#   rotation_policy {
#     automatic {
#       time_before_expiry = "P30D"
#     }

#     expire_after         = "P90D"
#     notify_before_expiry = "P29D"
#   }
# }

# # Set Secret
# resource "azurerm_key_vault_secret" "secret" {
#   name         = "test-secret"
#   value        = "ivan_vtoma"
#   key_vault_id = azurerm_key_vault.vault.id
# }

command = "echo >> push_an_image.sh ${azurerm_container_registry.acr.login_server} ${azurerm_container_registry.rg_app.admin_username} ${azurerm_container_registry.rg_app.admin_password}"